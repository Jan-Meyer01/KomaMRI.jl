steps:
  - label: "AMDGPU: Run tests on v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1.10"
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.version}}"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - KomaMRICore/src
            - KomaMRICore/ext
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'
      
      julia -e 'println("--- :julia: Running tests")
          using Pkg
          Pkg.test("KomaMRICore"; coverage=true, test_args=["AMDGPU"])'
    agents:
      queue: "juliagpu"
      rocm: "*"
    timeout_in_minutes: 120

  - label: "CUDA: Run tests on v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1.9"
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.version}}"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - KomaMRICore/src
            - KomaMRICore/ext
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'
      
      julia -e 'println("--- :julia: Running tests")
          using Pkg
          Pkg.test("KomaMRICore"; coverage=true, test_args=["CUDA"])'
    agents:
      queue: "juliagpu"
      cuda: "*"
    timeout_in_minutes: 120

  - label: "Metal: Run tests on v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1.9"
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.version}}"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - KomaMRICore/src
            - KomaMRICore/ext
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'
      
      julia -e 'println("--- :julia: Running tests")
          using Pkg
          Pkg.test("KomaMRICore"; coverage=true, test_args=["Metal"])'
    agents:
      queue: "juliaecosystem"
      os: "macos"
      arch: "aarch64"
    timeout_in_minutes: 120

  - label: "oneAPI: Run tests on v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1.9"
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.version}}"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - KomaMRICore/src
            - KomaMRICore/ext
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'
      
      julia -e 'println("--- :julia: Running tests")
          using Pkg
          Pkg.test("KomaMRICore"; coverage=true, test_args=["oneAPI"])'
    agents:
      queue: "juliagpu"
      intel: "*"
    timeout_in_minutes: 120

env:
  CI: BUILDKITE
  CODECOV_FLAGS: core
  SECRET_CODECOV_TOKEN: "wfVKjMzAWUQ7+9pBUQo++Dg9YjUJM4JaSI4XCnKee/7r//XsrO1Dsp5k3ugA/ghaJQaTphCH1cbA0s9X+Zyr5Eq4G2PDEIW2Hp0heYEhkY5ZSJ1JCOWef8jeGoN3INZMPbd59bmTZ2kSu8Xb2wd0wTIE4U/MXMIm8/w0Maczd6QRKb3/DT+dooTY+Vl5MTGMfYpEOt0Et/j2PgUwduDl6ZN1u3pW/vZRw9O3FYgDR2BGlGSQNL3RbZ80XXHYTgRtz65bUIryfOwHU4q0a17TtRuOElOtUxYJZypse4YXGr+2JqtuOzurUzndbAz5zvN3zpqCT8dZtjc5YDFF63psjQ==;U2FsdGVkX19bDUd/pkVgnI/1c5RKik5vA5sZxFXmc0vZ6a68P9lDU0GuYf+8nR5qb6rFzm7qD5pTCQ7xxFRJ+Q=="