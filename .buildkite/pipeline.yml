steps:
  - label: "AMDGPU: Run tests on v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1.10"
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.version}}"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - KomaMRICore/src
            - KomaMRICore/ext
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'
      
      julia -e 'println("--- :julia: Running tests")
          using Pkg
          Pkg.test("KomaMRICore"; coverage=true, test_args=["AMDGPU"])'
    agents:
      queue: "juliagpu"
      rocm: "*"
    timeout_in_minutes: 120

  - label: "CUDA: Run tests on v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1.9"
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.version}}"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - KomaMRICore/src
            - KomaMRICore/ext
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'
      
      julia -e 'println("--- :julia: Running tests")
          using Pkg
          Pkg.test("KomaMRICore"; coverage=true, test_args=["CUDA"])'
    agents:
      queue: "juliagpu"
      cuda: "*"
    timeout_in_minutes: 120

  - label: "Metal: Run tests on v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1.9"
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.version}}"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - KomaMRICore/src
            - KomaMRICore/ext
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'
      
      julia -e 'println("--- :julia: Running tests")
          using Pkg
          Pkg.test("KomaMRICore"; coverage=true, test_args=["Metal"])'
    agents:
      queue: "juliaecosystem"
      os: "macos"
      arch: "aarch64"
    timeout_in_minutes: 120

  - label: "oneAPI: Run tests on v{{matrix.version}}"
    matrix:
      setup:
        version:
          - "1.9"
    plugins:
      - JuliaCI/julia#v1:
          version: "{{matrix.version}}"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - KomaMRICore/src
            - KomaMRICore/ext
    command: |
      julia -e 'println("--- :julia: Instantiating project")
          using Pkg
          Pkg.develop([
              PackageSpec(path=pwd(), subdir="."),
              PackageSpec(path=pwd(), subdir="KomaMRIBase"),
              PackageSpec(path=pwd(), subdir="KomaMRICore"),
          ])'
      
      julia -e 'println("--- :julia: Running tests")
          using Pkg
          Pkg.test("KomaMRICore"; coverage=true, test_args=["oneAPI"])'
    agents:
      queue: "juliagpu"
      intel: "*"
    timeout_in_minutes: 120

env:
  CI: BUILDKITE
  CODECOV_FLAGS: core
  JULIA_PKG_SERVER: ""
  SECRET_CODECOV_TOKEN: "uBxOIgxCT1D0dg7NKagIb8tZgXjRYO1Rdvqf0O57c5Opt3+QzBp596B09KZbxsZXqdIfFwpAtjA2f+Aklhq2yNdkCoyolPkA+1zGrhOVgdXxvHc7xZUw+S0z8hBcftN50kYo+B5Vh5TmyxeXiPYNyLpGI3Y/2L9lRwdgIzzdQjzUsEy9HrkvdGuzgvUa3w46XP5yxkYIHihb9qPAL/VMEmqpvRURhOi2TO9GBoT3ussCe542OkC/FhlPKjWGIWFCpq0+DkJRgcBw6Oi+lvX0+bNmcGhHA0V8bLA3+++lCfyXTrSrbicq21uEcMO1S0cCPzLSt96V46Tc0bpb4UCcpQ==;U2FsdGVkX180D1vvwchhVGlm7wHnbtlB+sD+4UM5D2pUuaF5YEcbH6yUTsZ1EBGUxnMmQrMCM/o9BM28LitpMg=="